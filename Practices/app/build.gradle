apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

ext.majorVersion = 1
ext.minorVersion = 0
ext.patchVersion = 0
ext.preRelease = ""
ext.minSdkVersion = 21
ext.targetSdkVersion = 27
ext.compiledSdkVersion = 27

android {
    compileSdkVersion project.ext.compiledSdkVersion
    defaultConfig {
        applicationId "com.example.jati.practices"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        project.ext.set("archivesBaseName", "practices-" + generateVersionName())
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // support
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support:cardview-v7:$supportVersion"

    //architecture component
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$lifecycleVersion"
    implementation "android.arch.lifecycle:reactivestreams:$lifecycleVersion"

    // rx
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:$rxBindingVersion"

    // network
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp3Version"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$retrofitAdapter"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // DI
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // image
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    //test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

private Integer generateVersionCode() {
    return ext.minSdkVersion * 1000000 + ext.majorVersion * 10000 + ext.minorVersion * 100 + ext.patchVersion
}

private String generateVersionName() {
    String versionName = "${ext.majorVersion}.${ext.minorVersion}.${ext.patchVersion}"
    if (!ext.preRelease.isEmpty()) {
        versionName = versionName + "-" + ext.preRelease
    }
    return versionName
}
